openapi: "3.1.0"

info:
  version: "0.2.0"

  title: test.test

  termsOfService: 'https://test.test/terms/'

  contact:
    email: info@aequa-tech.com
    url: 'https://aequa-tech.com/contact'

  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'

  x-logo:
    url: 'https://aequa-tech.com/wp-content/uploads/2023/11/aequa-logo.svg'

  description: |
    Debunker Api description

servers:
  - url: "https://test.test/api/v1"

externalDocs:
  description: Find the full documentation
  url: 'ourexternaldoc.org'

paths:
  /users/status:
    get:
      security:
        - apiKey: []
          apiSecret: []
      summary: The user's status linked to the provided api and secret keys.
      description: Returns the status of the user linked to the provided api and secret keys. It also returns the number of tokens available for that key pair
      parameters:
        - in: header
          name: Accept-language
          required: false
          schema:
            $ref: "#/components/schemas/language"
      responses:
        "200":
          description: The user's status linked to the provided api and secret keys.
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/user'
                  available_tokens:
                    type: number
                    minimum: 0
          headers:
            Content-Type:
              $ref: "#/components/headers/Content-Type"
            Content-Length:
              $ref: "#/components/headers/Content-Length"
            X-RateLimit-Limit:
              $ref: "#/components/headers/X-RateLimit-Limit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/X-RateLimit-Remaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/X-RateLimit-Reset"

        "401":
          $ref: "#/components/responses/unauthorized"

        "429":
          $ref: "#/components/responses/tooManyRequests"

        "500":
          $ref: "#/components/responses/error"

  /scrape:
    post:
      security:
        - apiKey: []
          apiSecret: []
      summary: Request for an article analysis
      description: Description
      parameters:
        - in: header
          name: Accept-language
          required: false
          schema:
            $ref: "#/components/schemas/language"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  $ref: "#/components/schemas/basicUrl"
                analysisTypes:
                  $ref: "#/components/schemas/analysisTypes"
                contentLanguage:
                  $ref: "#/components/schemas/language"
                retry:
                  $ref: "#/components/schemas/retry"
                maxRetries:
                  $ref: "#/components/schemas/maxRetries"
                timeout:
                  $ref: "#/components/schemas/timeout"
                maxChars:
                  $ref: "#/components/schemas/charLimit"
              required:
                - url
                - analysisTypes
      responses:
        "200":
          description: The request has been processed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/requestResponse"
          headers:
            Content-Type:
              $ref: "#/components/headers/Content-Type"
            Content-Length:
              $ref: "#/components/headers/Content-Length"
            X-RateLimit-Limit:
              $ref: "#/components/headers/X-RateLimit-Limit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/X-RateLimit-Remaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/X-RateLimit-Reset"

        "400":
          $ref: '#/components/responses/invalid'

        "401":
          $ref: "#/components/responses/unauthorized"

        "403":
          $ref: "#/components/responses/forbidden"

        "429":
          $ref: "#/components/responses/tooManyRequests"

        "500":
          $ref: "#/components/responses/error"

webhooks:
  evaluation:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  $ref: "#/components/schemas/basicUrl"
                status:
                  type: integer
                  description: Indicates the status of the scrape request made.
                analysisType:
                  type: string
                  enum: [evaluation]
                data:
                  oneOf:
                    - $ref: "#/components/schemas/notValidResponse"
                    - $ref: "#/components/schemas/evaluationPayload"
                  discriminator:
                    propertyName: status
              required:
                - url
                - status
                - analysisType
                - data

  explanation:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  $ref: "#/components/schemas/basicUrl"
                status:
                  type: integer
                analysisType:
                  type: string
                  enum: [explanation]
                data:
                  oneOf:
                    - $ref: "#/components/schemas/notValidResponse"
                    - $ref: "#/components/schemas/explanationPayload"
                  discriminator:
                    propertyName: status
              required:
                - url
                - status
                - analysisType
                - data

components:
  headers:
    Content-Type:
      schema:
        type: string
      description: The content type of the response body

    Content-Length:
      schema:
        type: integer
      description: The content length of the response body (in bytes)

    X-RateLimit-Limit:
      schema:
        type: integer
      description: Request limit per hour.

    X-RateLimit-Remaining:
      schema:
        type: integer
      description: The number of requests left for the time window.

    X-RateLimit-Reset:
      schema:
        type: string
        format: date-time
      description: The time at which the rate limit resets, specified in UTC epoch time (in seconds).

  responses:
    error:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/notValidResponse'
      description: There were problems processing the request
      headers:
        Content-Length:
          $ref: '#/components/headers/Content-Length'
        Content-Type:
          $ref: '#/components/headers/Content-Type'
        X-RateLimit-Limit:
          $ref: '#/components/headers/X-RateLimit-Limit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/X-RateLimit-Remaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/X-RateLimit-Reset'

    forbidden:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/notValidResponse'
      description: The request is understood, but it has been refused or access is not allowed.
      headers:
        Content-Length:
          $ref: '#/components/headers/Content-Length'
        Content-Type:
          $ref: '#/components/headers/Content-Type'
        X-RateLimit-Limit:
          $ref: '#/components/headers/X-RateLimit-Limit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/X-RateLimit-Remaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/X-RateLimit-Reset'

    invalid:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/notValidResponse'
      description: The request was invalid or cannot be otherwise served.
      headers:
        Content-Length:
          $ref: '#/components/headers/Content-Length'
        Content-Type:
          $ref: '#/components/headers/Content-Type'
        X-RateLimit-Limit:
          $ref: '#/components/headers/X-RateLimit-Limit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/X-RateLimit-Remaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/X-RateLimit-Reset'

    tooManyRequests:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/notValidResponse'
      description: Too Many Requests. Reached the APIs rate
      headers:
        Content-Length:
          $ref: '#/components/headers/Content-Length'
        Content-Type:
          $ref: '#/components/headers/Content-Type'
        X-RateLimit-Limit:
          $ref: '#/components/headers/X-RateLimit-Limit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/X-RateLimit-Remaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/X-RateLimit-Reset'

    unauthorized:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/notValidResponse'
      description: Your request cannot be authenticated.
      headers:
        Content-Length:
          $ref: '#/components/headers/Content-Length'
        Content-Type:
          $ref: '#/components/headers/Content-Type'
        X-RateLimit-Limit:
          $ref: '#/components/headers/X-RateLimit-Limit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/X-RateLimit-Remaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/X-RateLimit-Reset'

  securitySchemes:
    apiKey:
      type: apiKey
      in: header
      name: X-API-Key

    apiSecret:
      type: apiKey
      in: header
      name: X-API-Secret

  schemas:
    analysisTypes:
      minProperties: 1
      properties:
        evaluation:
          $ref: '#/components/schemas/evaluationAnalysis'
        explanation:
          $ref: '#/components/schemas/explanationAnalysis'
      type: object

    evaluationAnalysis:
      properties:
        callbackUrl:
          $ref: '#/components/schemas/basicUrl'
      required:
        - callbackUrl
      type: object

    explanationAnalysis:
      properties:
        callbackUrl:
          $ref: '#/components/schemas/basicUrl'
        explanationType:
          $ref: '#/components/schemas/explanationType'
      required:
        - callbackUrl
        - explanationType
      type: object

    requestResponse:
      properties:
        message:
          description: A text message describing the response.
          type: string
        url:
          description: The url provided for analysis.
          type: string
      required:
        - message
      type: object

    notValidResponse:
      properties:
        message:
          description: A text message describing the response.
          type: string
      type: object

    explanationPayload:
      discriminator:
        propertyName: explanationDim
      oneOf:
        - $ref: '#/components/schemas/explanationAffective'
        - $ref: '#/components/schemas/explanationDanger'

    evaluationPayload:
      properties:
        analysisId:
          $ref: "#/components/schemas/id"
        informalStyle:
          $ref: "#/components/schemas/informalStyle"
        readability:
          $ref: "#/components/schemas/readability"
        clickBait:
          $ref: "#/components/schemas/clickBait"
        affectiveStyle:
          $ref: "#/components/schemas/affectiveStyle"
        dangerousStyle:
          $ref: "#/components/schemas/dangerousStyle"
      type: object

    user:
      properties:
        email:
          $ref: '#/components/schemas/email'
        name:
          type: string
        role:
          enum: [admin, user]
          type: string
      type: object

    language:
      default: it
      description: The language of the article that you want to analyze. Actually you can choose between Italian (it) and English (en)
      enum: [it,en]
      type: string

    email:
      format: email
      type: string

    # =======================================================

    basicUrl:
      type: string
      format: stringUri

    id:
      type: string
      description: an unique id used for handling next APIs requests

    retry:
      description: choose if you want to retry the call to the API. Default is false
      type: boolean
      default: false

    maxRetries:
      description: the total number of retries. Default is 2
      type: integer
      maximum: 5
      default: 2

    timeout:
      description: it sets the timeout of a request to our APIs. It is expressed in seconds. Default is 5
      type: integer
      maximum: 20
      default: 5

    charLimit:
      description: the limit of charachters of a text to be analyzed.
      type: integer
      maximum: 15000
      default: 10000

    categoricalValue:
      type: integer
      format: int32
      description: a categorical representation of a feature

    scoreType1:
      type: number
      format: float
      description: a score associated to a feature in the range 0-1
      minimum: 0
      maximum: 1

    scoreType2:
      type: number
      format: float
      description: aa score associated to a feature in the range -1-1
      minimum: -1
      maximum: 1

    token:
      type: string
      description: a chunck of text that corresponds to a word or a piece of word


    secondPerson:
      type: object
      summary: the text contains verbs conjugated at the second or first person
      description: it identifies all the occurrences of verbs conjugated at the first or second person
      properties:
        title:
          $ref: "#/components/schemas/labelPropagation"
        content:
          $ref: "#/components/schemas/labelPropagation"

    personalStyle:
      type: object
      summary: summary
      description: description
      properties:
        title:
          $ref: "#/components/schemas/labelPropagation"
        content:
          $ref: "#/components/schemas/labelPropagation"

    intensifiers:
      type: object
      summary: summary
      description: description
      properties:
        title:
          $ref: "#/components/schemas/labelPropagation"
        content:
          $ref: "#/components/schemas/labelPropagation"

    shortenedForms:
      type: object
      summary: summary
      description: description
      properties:
        title:
          $ref: "#/components/schemas/labelPropagation"
        content:
          $ref: "#/components/schemas/labelPropagation"

    modals:
      type: object
      summary: summary
      description: description
      properties:
        title:
          $ref: "#/components/schemas/labelPropagation"
        content:
          $ref: "#/components/schemas/labelPropagation"
    interrogatives:
      type: object
      summary: summary
      description: description
      properties:
        title:
          $ref: "#/components/schemas/labelPropagation"
        content:
          $ref: "#/components/schemas/labelPropagation"

    uppercaseWords:
      type: object
      summary: summary
      description: description
      properties:
        title:
          $ref: "#/components/schemas/labelPropagation"
        content:
          $ref: "#/components/schemas/labelPropagation"

    aggressivePunctuation:
      type: object
      summary: the text contains aggressive punctuation
      description: it identifies the presence of aggressive punctuation in the text
      properties:
        title:
          $ref: "#/components/schemas/labelPropagation"
        content:
          $ref: "#/components/schemas/labelPropagation"

    uncommonPunctuation:
      type: object
      summary: summary
      description: description
      properties:
        title:
          $ref: "#/components/schemas/labelPropagation"
        content:
          $ref: "#/components/schemas/labelPropagation"

    emoji:
      type: object
      summary: summary
      description: description
      properties:
        title:
          $ref: "#/components/schemas/labelPropagation"
        content:
          $ref: "#/components/schemas/labelPropagation"

    fleshReadingEase:
      type: object
      summary: summary
      description: description
      properties:
        title:
          $ref: "#/components/schemas/labelPropagation"
        content:
          $ref: "#/components/schemas/labelPropagation"

    misleadingHeadline:
      type: object
      summary: summary
      description: description
      properties:
        title:
          $ref: "#/components/schemas/labelPropagation"
        content:
          $ref: "#/components/schemas/labelPropagation"

    negativeSentiment:
      type: object
      summary: summary
      description: description
      properties:
        title:
          $ref: "#/components/schemas/labelPropagation"
        content:
          $ref: "#/components/schemas/labelPropagation"

    positiveSentiment:
      type: object
      summary: summary
      description: description
      properties:
        title:
          $ref: "#/components/schemas/labelPropagation"
        content:
          $ref: "#/components/schemas/labelPropagation"

    anger:
      type: object
      summary: summary
      description: description
      properties:
        title:
          $ref: "#/components/schemas/labelPropagation"
        content:
          $ref: "#/components/schemas/labelPropagation"

    fear:
      type: object
      summary: summary
      description: description
      properties:
        title:
          $ref: "#/components/schemas/labelPropagation"
        content:
          $ref: "#/components/schemas/labelPropagation"

    joy:
      type: object
      summary: summary
      description: description
      properties:
        title:
          $ref: "#/components/schemas/labelPropagation"
        content:
          $ref: "#/components/schemas/labelPropagation"

    sadness:
      type: object
      summary: summary
      description: description
      properties:
        title:
          $ref: "#/components/schemas/labelPropagation"
        content:
          $ref: "#/components/schemas/labelPropagation"

    irony:
      type: object
      summary: summary
      description: description
      properties:
        title:
          $ref: "#/components/schemas/labelPropagation"
        content:
          $ref: "#/components/schemas/labelPropagation"
    flame:
      type: object
      summary: summary
      description: description
      properties:
        title:
          $ref: "#/components/schemas/labelPropagation"
        content:
          $ref: "#/components/schemas/labelPropagation"

    stereotype:
      type: object
      summary: summary
      description: description
      properties:
        title:
          $ref: "#/components/schemas/labelPropagation"
        content:
          $ref: "#/components/schemas/labelPropagation"

    labelPropagation:
      type: object
      summary: summary
      description: description
      properties:
        absolute:
          $ref: "#/components/schemas/categoricalValue"
        local:
          $ref: "#/components/schemas/scoreType1"
        global:
          $ref: "#/components/schemas/scoreType1"

    informalStyle:
      type: object
      description: it returns the informal style score, which is composed of a list of all sub-features and their average
      properties:
        secondPerson:
          $ref: "#/components/schemas/secondPerson"
        personalStyle:
            $ref: "#/components/schemas/personalStyle"
        intensifiers:
            $ref: "#/components/schemas/intensifiers"
        shortened:
          $ref: "#/components/schemas/shortenedForms"
        modals:
            $ref: "#/components/schemas/modals"
        interrogatives:
          $ref: "#/components/schemas/interrogatives"
        uppercaseWords:
            $ref: "#/components/schemas/uppercaseWords"
        aggressivePunctuation:
          $ref: "#/components/schemas/aggressivePunctuation"
        uncommonPunctuation:
          $ref: "#/components/schemas/uncommonPunctuation"
        emoji:
            $ref: "#/components/schemas/emoji"
        overallScore:
          $ref: "#/components/schemas/scoreType1"

    readability:
      type: object
      description: desc
      properties:
        fleshReadingEase:
          $ref: '#/components/schemas/fleshReadingEase'

    clickBait:
      type: object
      description: desc
      properties:
        misleadingHeadline:
          $ref: '#/components/schemas/misleadingHeadline'

    affectiveStyle:
      type: object
      description: desc
      properties:
        positiveSentiment:
          $ref: '#/components/schemas/positiveSentiment'
        negativeSentiment:
          $ref: "#/components/schemas/negativeSentiment"
        joy:
          $ref: "#/components/schemas/joy"
        sadness:
          $ref: "#/components/schemas/sadness"
        fear:
          $ref: "#/components/schemas/fear"
        anger:
          $ref: "#/components/schemas/anger"

    dangerousStyle:
      type: object
      description: desc
      properties:
        irony:
          $ref: '#/components/schemas/irony'
        flame:
          $ref: "#/components/schemas/flame"
        stereotype:
          $ref: "#/components/schemas/stereotype"

    echoEffect:
      type: object
      description: desc
      properties:
        labelPropagation:
          $ref: '#/components/schemas/labelPropagation'

    reliability:
      type: object
      summary: summary
      description: description
      property:
        absolute:
          $ref: "#/components/schemas/categoricalValue"

    explanationFlame:
      summary: the piece of text that contribute to determine that an article expresses inflammatory contents
      properties:
        token:
          $ref: "#/components/schemas/token"
        probability:
          $ref: "#/components/schemas/scoreType1"

    explanationStereotype:
      summary: the piece of text that contribute to determine that an article expresses stereotypical contents
      properties:
        token:
          $ref: "#/components/schemas/token"
        probability:
          $ref: "#/components/schemas/scoreType1"

    explanationIrony:
      summary: the piece of text that contribute to determine that an article expresses ironic contents
      properties:
        token:
          $ref: "#/components/schemas/token"
        probability:
          $ref: "#/components/schemas/scoreType1"

    explanationDanger:
      summary: all the explanations of dangerous features
      required:
        -  explanationType
      properties:
        explanationDim:
          $ref: "#/components/schemas/explanationType"
        explanationFlame:
          $ref: "#/components/schemas/explanationFlame"
        explanationStereotype:
          $ref: "#/components/schemas/explanationStereotype"
        explanationIrony:
          $ref: "#/components/schemas/explanationIrony"

    explanationAnger:
      summary: the piece of text that contribute to determine that an article expresses anger
      properties:
        token:
          $ref: "#/components/schemas/token"
        probability:
          $ref: "#/components/schemas/scoreType1"

    explanationFear:
      summary: the piece of text that contribute to determine that an article expresses anger
      properties:
        token:
          $ref: "#/components/schemas/token"
        probability:
          $ref: "#/components/schemas/scoreType1"

    explanationJoy:
      summary: the piece of text that contribute to determine that an article expresses joy
      properties:
        token:
          $ref: "#/components/schemas/token"
        probability:
          $ref: "#/components/schemas/scoreType1"

    explanationSadness:
      summary: the piece of text that contribute to determine that an article expresses sadness
      properties:
        token:
          $ref: "#/components/schemas/token"
        probability:
          $ref: "#/components/schemas/scoreType1"

    explanationPositiveSentiment:
      summary: the piece of text that contribute to determine that an article expresses a positive sentiment
      properties:
        token:
          $ref: "#/components/schemas/token"
        probability:
          $ref: "#/components/schemas/scoreType1"

    explanationNegativeSentiment:
      summary: the piece of text that contribute to determine that an article expresses a negative sentiment
      properties:
        token:
          $ref: "#/components/schemas/token"
        probability:
          $ref: "#/components/schemas/scoreType1"

    explanationAffective:
      summary: all the explanations of dangerous features
      required:
        -  explanationType
      properties:
        explanationDim:
          $ref: "#/components/schemas/explanationType"
        explanationNegativeSentiment:
          $ref: "#/components/schemas/explanationNegativeSentiment"
        explanationPositiveSentiment:
          $ref: "#/components/schemas/explanationPositiveSentiment"
        explanationAnger:
          $ref: "#/components/schemas/explanationAnger"
        explanationSadness:
          $ref: "#/components/schemas/explanationSadness"
        explanationJoy:
          $ref: "#/components/schemas/explanationJoy"
        explanationFear:
          $ref: "#/components/schemas/explanationFear"

    explanationType:
      name: explanation
      type: string
      enum:
        - affectiveStyle
        - dangerousStyle
        - networkAnalysis
